@import "scss/reset";
@import "scss/base";

// Je créais une var linear-gradient que je vais réutiliser à plusieurs reprises
$linear-gradient: linear-gradient(
  90deg,
  rgba(219, 111, 38, 1) 0%,
  rgba(209, 156, 27, 1) 18%,
  rgba(111, 87, 189, 1) 64%,
  rgba(188, 25, 240, 1) 87%,
  rgba(54, 5, 69, 1) 100%
);

body {
  background: black;
  color: white;
  font-family: 'Montserrat', sans-serif;
  font-weight: bold;
}

.container {
  max-width: 1280px;
  padding: 0 24px;
  margin: auto;
}

nav {
  position: sticky;
  top: 0;
  height: 100px;
  margin-bottom: 64px;


  .container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 100%;

    .logo {
      display: flex;
      align-items: center;
      // Span rond remplacé par un logo
      // span {
      //   margin-right: 8px;
      //   border-radius: 50px;
      //   display: block;
      //   height: 30px;
      //   width: 30px;
      //   background: $linear-gradient;
      // }

      img{
        height: 64px;
        width: 64px;
      }
    }

    ul {
      display: flex;
      align-items: center;
      // écart entre les éléments
      gap: 20px;
    }

    // Gestion du la search-bar
    .search-bar {
      display: flex;
      align-items: center;
      height: 40px;

      // Gestion du dégradé du border de la search-bar
      position: relative;
      border: 4px solid transparent;
      border-radius: 30px;
      background: black;
      // La propriété background-clip définit la façon dont l'arrière-plan d'un élément (que ce soit l'image ou la couleur) s'étend sous la boîte de bordure, la boîte de remplissage (padding) ou la boîte de contenu.
      // avec la valeur padding-box : Aucun arrière-plan n'est dessiné dans la boîte de bordure. L'arrière-plan s'étend jusqu'à la limite de la boîte de remplissage (padding).
      background-clip: padding-box;
      padding: 10px;

      &:after {
        content: '';
        position: absolute;
        inset: -2px;
        display: block;
        z-index: -1;
        background: $linear-gradient;
        border-radius: 30px;
      }

      ::placeholder {
        color: white;
        opacity: 0.7;
        font-weight: 500;
      }

      input {
        padding: 0 12px;
      }
    }
  }
}

.hero {
  margin-bottom: 64px;
  .container {
    display: flex;
    // Mon contenu de gauche est trop bas donc je supprime cette class. Mais de manière globale c'est une bonne pratique de l'insérer
    align-items: center;
    justify-content: space-between;

    > .left {
      // Pour que mes dic right et left aient la m^me tailles je leur mets un flex:1;
      flex: 1;
      h1 {
        font-size: 64px;
        font-weight: 900;
        margin-bottom: 32px;

        span {
          -webkit-background-clip: text;
          -moz-background-clip: text;
          background-image: $linear-gradient;
          -webkit-text-fill-color: transparent;
          -moz-text-fill-color: transparent;
        }
      }

      .ctas {
        display: flex;
        gap: 24px;
        margin-bottom: 32px;
      }
      .figures {
        display: flex;
        justify-content: center;
        align-items: center;

        li {
          display: flex;
          flex-direction: column;
          flex-grow: 1;
          border-right: 2px solid white;
          text-align: left;
          width: 100px;
          
          // je ne cible que le 2 et 3 eme elements car je veux que le premier reste aligné à gauche avec le reste du container. 
          &:nth-child(2n){
            align-items: center;
          }
          &:last-child {
            border: none;
            align-items: center;
          }

          strong {
            font-size: 24px;
            margin-bottom: 8px;
          }
        }
      }
    }

    > .right {
      // Pour que mes dic right et left aient la même tailles je leur mets un flex:1;
      flex: 1;
      height: 100%;
      width: 100%;
      display: flex;
      position: relative;

      .perso-wrapper {
        height: 100%;
        width: 100%;
        position: relative;

        &:after {
          content: '';
          display: block;
          width: 100%;
          aspect-ratio: 1;
          background: $linear-gradient;
          position: absolute;
          inset: 0;
          border-radius: 50%;
          // Pour que mon perso apparaisse je recume le tout d'un cran.
          z-index: -1;
        }

        // Pour la gestion du bonhomme en décallé dqns son container on l'a wrapper, mis en position relative et on lui a attribué un bottom.
        .img-wp {
          position: relative;
          img {
            position: relative;
            bottom: -50px;
            left: -100px;
          }
        }
      }
      // Gestion de l'onglet stats dans la partie de droite
      .stats {
        position: absolute;
        top: 50%;
        right: 0;
        background: rgba(white, 0.3);
        padding: 10px;
        border-radius: 12px;
        display: flex;
        gap: 12px;

        > div {
          display: flex;
          flex-direction: column;

          span {
            font-size: .8em;
            margin-bottom: 8px;
            font-weight: 400;

          }
          strong {
            margin-bottom: 12px;
          }
        }
      }
    }
  }
}

.btn {
  height: 48px;
  padding: 0 24px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background: $linear-gradient;
  border-radius: 48px;

  &.btn--border {
    position: relative;
    border: 4px solid transparent;
    border-radius: 30px;
    background: black;
    background-clip: padding-box;
    color: rgba(white, 0.8);

    &:after {
      content: "";
      position: absolute;
      inset: -2px;
      display: block;
      z-index: -1;
      background: $linear-gradient;
      border-radius: 30px;
    }
  }

  &.btn--small {
    height: 32px;
  }

  &.btn--white {
    background: transparent;
    border-color: white;
    border-width: 2px;
  }
}

.achievement {
  .container {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .achievement__item {
    display: flex;
    align-items: center;
    gap: 24px;

    // icône remplaçé par l'image
    // > .left {
    //   background: $linear-gradient;
    //   border-radius: 50%;
    //   width:64px;
    //   height:64px;
    //   align-items: center;
    //   justify-content: center;
    //   display: flex;
    // }
    img{
       height: 64px;
       width: 64px;
     }
  }
}
